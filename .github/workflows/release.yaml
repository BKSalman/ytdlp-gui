name: publish-release
on:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  packaging:
    name: Packaging
    runs-on: ${{ matrix.os }}
    env:
      CARGO_TERM_COLOR: always
    strategy:
      fail-fast: false
      matrix:
        build: [pinned, stable, nightly]
        include:
          - build: pinned
            os: ubuntu-20.04
            rust: 1.69
          - build: stable
            os: ubuntu-20.04
            rust: stable
          - build: nightly
            os: ubuntu-20.04
            rust: nightly
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          targets: x86_64-pc-windows-gnu

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-${{ matrix.build }}-test"

      - name: Install cargo-make
        run: cargo install cargo-make

      - name: Packages script
        run: cargo make packages

      - name: Upload assets to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "*.rpm,*.deb,ytdlp-gui-windows-64.tar.gz,ytdlp-gui-linux-x64-86"
          tags: true
          draft: true
