name: publish-release
on:
  push:
    tags:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  package-linux:
    name: Package Linux
    runs-on: ${{ matrix.os }}
    env:
      CARGO_TERM_COLOR: always
    strategy:
      fail-fast: false
      matrix:
        build: [stable]
        include:
          - build: stable
            os: ubuntu-24.04
            rust: stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-${{ matrix.build }}-test"

      - name: Install Linux dependencies
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt install libatk1.0-dev libgtk-3-dev libcairo2-dev libpango1.0-dev libexpat1-dev

      - name: Package Linux
        run: cargo xtask package_linux_all

      - name: Upload assets to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "packages/*.rpm;packages/*.deb;packages/ytdlp-gui-linux-x64-86"
          tags: true
          draft: true

  package-windows:
    name: Package windows
    runs-on: ${{ matrix.os }}
    env:
      CARGO_TERM_COLOR: always
    strategy:
      fail-fast: false
      matrix:
        build: [stable]
        include:
          - build: stable
            os: windows-latest
            rust: stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-${{ matrix.build }}-test"

      - name: Packages script
        run: cargo xtask package_windows

      - name: Upload assets to release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "packages/ytdlp-gui-windows-64.zip"
          tags: true
          draft: true
